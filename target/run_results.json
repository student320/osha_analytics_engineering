{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "2025.9.24+f4f1865", "generated_at": "2025-09-26T03:38:36.450948Z", "invocation_id": "a61dd3dd-faf5-49ef-8add-ae75dba977d0", "invocation_started_at": "2025-09-26T03:38:30.577838Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:32.113608Z", "completed_at": "2025-09-26T03:38:32.132380Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:32.155606Z", "completed_at": "2025-09-26T03:38:33.274874Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.1741511821746826, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "5af48eed-3316-4ef5-95fd-bf377d075978", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.stg_osha_raw__osha_2016", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from `osha-analytics-project`.`osha_data_all`.`osha_2016`\n\n),\n\nrenamed as (\n    select\n\n        -- identifiers\n        safe_cast(id as int64) as id,\n        trim(company_name) as company_name,\n        establishment_name,\n        safe_cast(establishment_id as int64) as establishment_id,\n        safe_cast(establishment_type as int64) as establishment_type,\n        safe_cast(size as int64) as size,\n        nullif(trim(ein), 'null') as ein,  \n        trim(street_address) as street_address,\n        trim(city) as city,\n        trim(state) as state,\n        trim(zip_code) as zip_code,\n        safe_cast(naics_code as int64) as naics_code,\n        trim(industry_description) as industry_description,\n\n        -- injury info\n        safe_cast(annual_average_employees as int64) as annual_average_employees,\n        safe_cast(total_hours_worked as int64) as total_hours_worked,\n        safe_cast(no_injuries_illnesses as int64) as record_of_injuries_illnesses,\n        safe_cast(total_deaths as int64) as total_deaths,\n        safe_cast(total_dafw_cases as int64) as total_days_away_from_work_cases,\n        safe_cast(total_djtr_cases as int64) as total_job_transfer_or_restriction_cases,\n        safe_cast(total_other_cases as int64) as total_other_cases,\n        safe_cast(total_dafw_days as int64) as total_days_away_from_work_days,\n        safe_cast(total_djtr_days as int64) as total_job_transfer_or_restriction_days,\n        safe_cast(total_injuries as int64) as total_injuries,\n        safe_cast(total_poisonings as int64) as total_poisonings,\n        safe_cast(total_respiratory_conditions as int64) as total_respiratory_conditions,\n        safe_cast(total_skin_disorders as int64) as total_skin_disorders,\n        safe_cast(total_hearing_loss as int64) as total_hearing_loss,\n        safe_cast(total_other_illnesses as int64) as total_other_illnesses,\n\n        -- time info\n        safe_cast(year_filing_for as int64) as year_filing_for,\n        -- safely parse created_timestamp whether it has time or not\n        case \n        when safe.parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp) is not null\n            then parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp)\n        else parse_timestamp('%m/%d/%Y %H:%M:%S', concat(created_timestamp, ' 00:00:00'))\n        end as created_timestamp,\n        change_reason\n    from source\n),\n\n-- de duplicate records, keep record with most recent timestamp\ndedup as (\n    select *\n    from (\n        select *,\n               row_number() over (\n                   partition by establishment_id, year_filing_for\n                   order by created_timestamp desc\n               ) as rn\n        from renamed\n    )\n    where rn = 1\n)\n\nselect * from dedup", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2016`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:32.115586Z", "completed_at": "2025-09-26T03:38:32.131986Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:32.153634Z", "completed_at": "2025-09-26T03:38:33.449088Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.3467638492584229, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "6575cac5-79e1-4db2-99cb-17f7028d1cea", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.stg_osha_raw__osha_2017", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from `osha-analytics-project`.`osha_data_all`.`osha_2017`\n\n),\n\nrenamed as (\n    select\n\n        -- identifiers\n        safe_cast(id as int64) as id,\n        trim(company_name) as company_name,\n        establishment_name,\n        safe_cast(establishment_id as int64) as establishment_id,\n        safe_cast(establishment_type as int64) as establishment_type,\n        safe_cast(size as int64) as size,\n        nullif(trim(ein), 'null') as ein,  \n        trim(street_address) as street_address,\n        trim(city) as city,\n        trim(state) as state,\n        trim(zip_code) as zip_code,\n        safe_cast(naics_code as int64) as naics_code,\n        trim(industry_description) as industry_description,\n\n        -- injury info\n        safe_cast(annual_average_employees as int64) as annual_average_employees,\n        safe_cast(total_hours_worked as int64) as total_hours_worked,\n        safe_cast(no_injuries_illnesses as int64) as record_of_injuries_illnesses,\n        safe_cast(total_deaths as int64) as total_deaths,\n        safe_cast(total_dafw_cases as int64) as total_days_away_from_work_cases,\n        safe_cast(total_djtr_cases as int64) as total_job_transfer_or_restriction_cases,\n        safe_cast(total_other_cases as int64) as total_other_cases,\n        safe_cast(total_dafw_days as int64) as total_days_away_from_work_days,\n        safe_cast(total_djtr_days as int64) as total_job_transfer_or_restriction_days,\n        safe_cast(total_injuries as int64) as total_injuries,\n        safe_cast(total_poisonings as int64) as total_poisonings,\n        safe_cast(total_respiratory_conditions as int64) as total_respiratory_conditions,\n        safe_cast(total_skin_disorders as int64) as total_skin_disorders,\n        safe_cast(total_hearing_loss as int64) as total_hearing_loss,\n        safe_cast(total_other_illnesses as int64) as total_other_illnesses,\n\n        -- time info\n        safe_cast(year_filing_for as int64) as year_filing_for,\n        -- safely parse created_timestamp whether it has time or not\n        case \n        when safe.parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp) is not null\n            then parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp)\n        else parse_timestamp('%m/%d/%Y %H:%M:%S', concat(created_timestamp, ' 00:00:00'))\n        end as created_timestamp,\n        change_reason\n    from source\n),\n\n-- de duplicate records, keep record with most recent timestamp\ndedup as (\n    select *\n    from (\n        select *,\n               row_number() over (\n                   partition by establishment_id, year_filing_for\n                   order by created_timestamp desc\n               ) as rn\n        from renamed\n    )\n    where rn = 1\n)\n\nselect * from dedup", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2017`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:32.117371Z", "completed_at": "2025-09-26T03:38:32.120725Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:32.121270Z", "completed_at": "2025-09-26T03:38:33.505044Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 1.4019136428833008, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "11bd609a-2589-4e79-bb93-adc4ce38aa2a", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.stg_osha_raw__osha_2018", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from `osha-analytics-project`.`osha_data_all`.`osha_2018`\n\n),\n\nrenamed as (\n    select\n\n        -- identifiers\n        safe_cast(id as int64) as id,\n        trim(company_name) as company_name,\n        establishment_name,\n        safe_cast(establishment_id as int64) as establishment_id,\n        safe_cast(establishment_type as int64) as establishment_type,\n        safe_cast(size as int64) as size,\n        nullif(trim(ein), 'null') as ein,  \n        trim(street_address) as street_address,\n        trim(city) as city,\n        trim(state) as state,\n        trim(zip_code) as zip_code,\n        safe_cast(naics_code as int64) as naics_code,\n        trim(industry_description) as industry_description,\n\n        -- injury info\n        safe_cast(annual_average_employees as int64) as annual_average_employees,\n        safe_cast(total_hours_worked as int64) as total_hours_worked,\n        safe_cast(no_injuries_illnesses as int64) as record_of_injuries_illnesses,\n        safe_cast(total_deaths as int64) as total_deaths,\n        safe_cast(total_dafw_cases as int64) as total_days_away_from_work_cases,\n        safe_cast(total_djtr_cases as int64) as total_job_transfer_or_restriction_cases,\n        safe_cast(total_other_cases as int64) as total_other_cases,\n        safe_cast(total_dafw_days as int64) as total_days_away_from_work_days,\n        safe_cast(total_djtr_days as int64) as total_job_transfer_or_restriction_days,\n        safe_cast(total_injuries as int64) as total_injuries,\n        safe_cast(total_poisonings as int64) as total_poisonings,\n        safe_cast(total_respiratory_conditions as int64) as total_respiratory_conditions,\n        safe_cast(total_skin_disorders as int64) as total_skin_disorders,\n        safe_cast(total_hearing_loss as int64) as total_hearing_loss,\n        safe_cast(total_other_illnesses as int64) as total_other_illnesses,\n\n        -- time info\n        safe_cast(year_filing_for as int64) as year_filing_for,\n        -- safely parse created_timestamp whether it has time or not\n        case \n        when safe.parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp) is not null\n            then parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp)\n        else parse_timestamp('%m/%d/%Y %H:%M:%S', concat(created_timestamp, ' 00:00:00'))\n        end as created_timestamp,\n        change_reason\n    from source\n),\n\n-- de duplicate records, keep record with most recent timestamp\ndedup as (\n    select *\n    from (\n        select *,\n               row_number() over (\n                   partition by establishment_id, year_filing_for\n                   order by created_timestamp desc\n               ) as rn\n        from renamed\n    )\n    where rn = 1\n)\n\nselect * from dedup", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2018`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:33.285997Z", "completed_at": "2025-09-26T03:38:33.289443Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:33.290136Z", "completed_at": "2025-09-26T03:38:34.326386Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.0442941188812256, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "b3d05270-f821-44b7-9c64-16f9b52661ae", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.stg_osha_raw__osha_2019", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from `osha-analytics-project`.`osha_data_all`.`osha_2019`\n\n),\n\nrenamed as (\n    select\n\n        -- identifiers\n        safe_cast(id as int64) as id,\n        trim(company_name) as company_name,\n        establishment_name,\n        safe_cast(establishment_id as int64) as establishment_id,\n        safe_cast(establishment_type as int64) as establishment_type,\n        safe_cast(size as int64) as size,\n        nullif(trim(ein), 'null') as ein,  \n        trim(street_address) as street_address,\n        trim(city) as city,\n        trim(state) as state,\n        trim(zip_code) as zip_code,\n        safe_cast(naics_code as int64) as naics_code,\n        trim(industry_description) as industry_description,\n\n        -- injury info\n        safe_cast(annual_average_employees as int64) as annual_average_employees,\n        safe_cast(total_hours_worked as int64) as total_hours_worked,\n        safe_cast(no_injuries_illnesses as int64) as record_of_injuries_illnesses,\n        safe_cast(total_deaths as int64) as total_deaths,\n        safe_cast(total_dafw_cases as int64) as total_days_away_from_work_cases,\n        safe_cast(total_djtr_cases as int64) as total_job_transfer_or_restriction_cases,\n        safe_cast(total_other_cases as int64) as total_other_cases,\n        safe_cast(total_dafw_days as int64) as total_days_away_from_work_days,\n        safe_cast(total_djtr_days as int64) as total_job_transfer_or_restriction_days,\n        safe_cast(total_injuries as int64) as total_injuries,\n        safe_cast(total_poisonings as int64) as total_poisonings,\n        safe_cast(total_respiratory_conditions as int64) as total_respiratory_conditions,\n        safe_cast(total_skin_disorders as int64) as total_skin_disorders,\n        safe_cast(total_hearing_loss as int64) as total_hearing_loss,\n        safe_cast(total_other_illnesses as int64) as total_other_illnesses,\n\n        -- time info\n        safe_cast(year_filing_for as int64) as year_filing_for,\n        -- safely parse created_timestamp whether it has time or not\n        case \n        when safe.parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp) is not null\n            then parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp)\n        else parse_timestamp('%m/%d/%Y %H:%M:%S', concat(created_timestamp, ' 00:00:00'))\n        end as created_timestamp,\n        change_reason\n    from source\n),\n\n-- de duplicate records, keep record with most recent timestamp\ndedup as (\n    select *\n    from (\n        select *,\n               row_number() over (\n                   partition by establishment_id, year_filing_for\n                   order by created_timestamp desc\n               ) as rn\n        from renamed\n    )\n    where rn = 1\n)\n\nselect * from dedup", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2019`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:33.511130Z", "completed_at": "2025-09-26T03:38:33.513448Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:33.513891Z", "completed_at": "2025-09-26T03:38:34.415021Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.9062905311584473, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "533802cd-1312-43d9-aebe-71a6ae0f7b4f", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.stg_osha_raw__osha_2021", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from `osha-analytics-project`.`osha_data_all`.`osha_2021`\n\n),\n\nrenamed as (\n    select\n\n        -- identifiers\n        safe_cast(id as int64) as id,\n        trim(company_name) as company_name,\n        establishment_name,\n        safe_cast(establishment_id as int64) as establishment_id,\n        safe_cast(establishment_type as int64) as establishment_type,\n        safe_cast(size as int64) as size,\n        nullif(trim(ein), 'null') as ein,  \n        trim(street_address) as street_address,\n        trim(city) as city,\n        trim(state) as state,\n        trim(zip_code) as zip_code,\n        safe_cast(naics_code as int64) as naics_code,\n        trim(industry_description) as industry_description,\n\n        -- injury info\n        safe_cast(annual_average_employees as int64) as annual_average_employees,\n        safe_cast(total_hours_worked as int64) as total_hours_worked,\n        safe_cast(no_injuries_illnesses as int64) as record_of_injuries_illnesses,\n        safe_cast(total_deaths as int64) as total_deaths,\n        safe_cast(total_dafw_cases as int64) as total_days_away_from_work_cases,\n        safe_cast(total_djtr_cases as int64) as total_job_transfer_or_restriction_cases,\n        safe_cast(total_other_cases as int64) as total_other_cases,\n        safe_cast(total_dafw_days as int64) as total_days_away_from_work_days,\n        safe_cast(total_djtr_days as int64) as total_job_transfer_or_restriction_days,\n        safe_cast(total_injuries as int64) as total_injuries,\n        safe_cast(total_poisonings as int64) as total_poisonings,\n        safe_cast(total_respiratory_conditions as int64) as total_respiratory_conditions,\n        safe_cast(total_skin_disorders as int64) as total_skin_disorders,\n        safe_cast(total_hearing_loss as int64) as total_hearing_loss,\n        safe_cast(total_other_illnesses as int64) as total_other_illnesses,\n\n        -- time info\n        safe_cast(year_filing_for as int64) as year_filing_for,\n        -- safely parse created_timestamp whether it has time or not\n        case \n        when safe.parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp) is not null\n            then parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp)\n        else parse_timestamp('%m/%d/%Y %H:%M:%S', concat(created_timestamp, ' 00:00:00'))\n        end as created_timestamp,\n        change_reason\n    from source\n),\n\n-- de duplicate records, keep record with most recent timestamp\ndedup as (\n    select *\n    from (\n        select *,\n               row_number() over (\n                   partition by establishment_id, year_filing_for\n                   order by created_timestamp desc\n               ) as rn\n        from renamed\n    )\n    where rn = 1\n)\n\nselect * from dedup", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2021`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:33.454921Z", "completed_at": "2025-09-26T03:38:33.457763Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:33.458193Z", "completed_at": "2025-09-26T03:38:34.543904Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.0911836624145508, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "27cfc665-ad88-4f51-a293-bb95e7b8710d", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.stg_osha_raw__osha_2020", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from `osha-analytics-project`.`osha_data_all`.`osha_2020`\n\n),\n\nrenamed as (\n    select\n\n        -- identifiers\n        safe_cast(id as int64) as id,\n        trim(company_name) as company_name,\n        establishment_name,\n        safe_cast(establishment_id as int64) as establishment_id,\n        safe_cast(establishment_type as int64) as establishment_type,\n        safe_cast(size as int64) as size,\n        nullif(trim(ein), 'null') as ein,  \n        trim(street_address) as street_address,\n        trim(city) as city,\n        trim(state) as state,\n        trim(zip_code) as zip_code,\n        safe_cast(naics_code as int64) as naics_code,\n        trim(industry_description) as industry_description,\n\n        -- injury info\n        safe_cast(annual_average_employees as int64) as annual_average_employees,\n        safe_cast(total_hours_worked as int64) as total_hours_worked,\n        safe_cast(no_injuries_illnesses as int64) as record_of_injuries_illnesses,\n        safe_cast(total_deaths as int64) as total_deaths,\n        safe_cast(total_dafw_cases as int64) as total_days_away_from_work_cases,\n        safe_cast(total_djtr_cases as int64) as total_job_transfer_or_restriction_cases,\n        safe_cast(total_other_cases as int64) as total_other_cases,\n        safe_cast(total_dafw_days as int64) as total_days_away_from_work_days,\n        safe_cast(total_djtr_days as int64) as total_job_transfer_or_restriction_days,\n        safe_cast(total_injuries as int64) as total_injuries,\n        safe_cast(total_poisonings as int64) as total_poisonings,\n        safe_cast(total_respiratory_conditions as int64) as total_respiratory_conditions,\n        safe_cast(total_skin_disorders as int64) as total_skin_disorders,\n        safe_cast(total_hearing_loss as int64) as total_hearing_loss,\n        safe_cast(total_other_illnesses as int64) as total_other_illnesses,\n\n        -- time info\n        safe_cast(year_filing_for as int64) as year_filing_for,\n        -- safely parse created_timestamp whether it has time or not\n        case \n        when safe.parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp) is not null\n            then parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp)\n        else parse_timestamp('%m/%d/%Y %H:%M:%S', concat(created_timestamp, ' 00:00:00'))\n        end as created_timestamp,\n        change_reason\n    from source\n),\n\n-- de duplicate records, keep record with most recent timestamp\ndedup as (\n    select *\n    from (\n        select *,\n               row_number() over (\n                   partition by establishment_id, year_filing_for\n                   order by created_timestamp desc\n               ) as rn\n        from renamed\n    )\n    where rn = 1\n)\n\nselect * from dedup", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2020`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:32.106809Z", "completed_at": "2025-09-26T03:38:32.126373Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:32.145656Z", "completed_at": "2025-09-26T03:38:34.853727Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 2.753011703491211, "adapter_response": {"_message": "CREATE TABLE (2.0 rows, 0 processed)", "code": "CREATE TABLE", "rows_affected": 2, "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "1416df09-1ddb-427b-a70a-7998c856ded9", "slot_ms": 1802}, "message": "CREATE TABLE (2.0 rows, 0 processed)", "failures": null, "unique_id": "model.osha_analytics.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`my_first_dbt_model`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:34.335199Z", "completed_at": "2025-09-26T03:38:34.339974Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:34.340718Z", "completed_at": "2025-09-26T03:38:35.287524Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.9549305438995361, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "7e4be14e-d689-4ff5-8655-3c83d906ff1a", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.stg_osha_raw__osha_2022", "compiled": true, "compiled_code": "with \n\nsource as (\n\n    select * from `osha-analytics-project`.`osha_data_all`.`osha_2022`\n\n),\n\nrenamed as (\n    select\n\n        -- identifiers\n        safe_cast(id as int64) as id,\n        trim(company_name) as company_name,\n        establishment_name,\n        safe_cast(establishment_id as int64) as establishment_id,\n        safe_cast(establishment_type as int64) as establishment_type,\n        safe_cast(size as int64) as size,\n        nullif(trim(ein), 'null') as ein,  \n        trim(street_address) as street_address,\n        trim(city) as city,\n        trim(state) as state,\n        trim(zip_code) as zip_code,\n        safe_cast(naics_code as int64) as naics_code,\n        trim(industry_description) as industry_description,\n\n        -- injury info\n        safe_cast(annual_average_employees as int64) as annual_average_employees,\n        safe_cast(total_hours_worked as int64) as total_hours_worked,\n        safe_cast(no_injuries_illnesses as int64) as record_of_injuries_illnesses,\n        safe_cast(total_deaths as int64) as total_deaths,\n        safe_cast(total_dafw_cases as int64) as total_days_away_from_work_cases,\n        safe_cast(total_djtr_cases as int64) as total_job_transfer_or_restriction_cases,\n        safe_cast(total_other_cases as int64) as total_other_cases,\n        safe_cast(total_dafw_days as int64) as total_days_away_from_work_days,\n        safe_cast(total_djtr_days as int64) as total_job_transfer_or_restriction_days,\n        safe_cast(total_injuries as int64) as total_injuries,\n        safe_cast(total_poisonings as int64) as total_poisonings,\n        safe_cast(total_respiratory_conditions as int64) as total_respiratory_conditions,\n        safe_cast(total_skin_disorders as int64) as total_skin_disorders,\n        safe_cast(total_hearing_loss as int64) as total_hearing_loss,\n        safe_cast(total_other_illnesses as int64) as total_other_illnesses,\n\n        -- time info\n        safe_cast(year_filing_for as int64) as year_filing_for,\n        -- safely parse created_timestamp whether it has time or not, some entries do not have time\n        case \n        when safe.parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp) is not null\n            then parse_timestamp('%m/%d/%Y %H:%M:%S', created_timestamp)\n        else parse_timestamp('%m/%d/%Y %H:%M:%S', concat(created_timestamp, ' 00:00:00'))\n        end as created_timestamp,\n        change_reason\n    from source\n),\n\n-- de duplicate records, keep record with most recent timestamp\ndedup as (\n    select *\n    from (\n        select *,\n               row_number() over (\n                   partition by establishment_id, year_filing_for\n                   order by created_timestamp desc\n               ) as rn\n        from renamed\n    )\n    where rn = 1\n)\n\nselect * from dedup", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2022`", "batch_results": null}, {"status": "fail", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:34.863318Z", "completed_at": "2025-09-26T03:38:34.890307Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:34.891600Z", "completed_at": "2025-09-26T03:38:36.072448Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 1.2131268978118896, "adapter_response": {"_message": "SELECT (1.0 rows, 8.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 8, "bytes_billed": 10485760, "location": "US", "project_id": "osha-analytics-project", "job_id": "dcac54a8-ba1d-4f4a-851e-0a66cf58c22d", "slot_ms": 26}, "message": "Got 1 result, configured to fail if != 0", "failures": 1, "unique_id": "test.osha_analytics.not_null_my_first_dbt_model_id.5fb22c2710", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom `osha-analytics-project`.`dbt_osha_dchung`.`my_first_dbt_model`\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:34.878610Z", "completed_at": "2025-09-26T03:38:34.890831Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:34.912399Z", "completed_at": "2025-09-26T03:38:36.127495Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2674169540405273, "adapter_response": {"_message": "SELECT (1.0 rows, 8.0 Bytes processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 8, "bytes_billed": 10485760, "location": "US", "project_id": "osha-analytics-project", "job_id": "d81bf5fe-41bc-4b3f-ab82-cfb84d4c3c06", "slot_ms": 42}, "message": null, "failures": 0, "unique_id": "test.osha_analytics.unique_my_first_dbt_model_id.16e066b321", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select id as unique_field\n  from `osha-analytics-project`.`dbt_osha_dchung`.`my_first_dbt_model`\n  where id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-3 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.osha_analytics.my_second_dbt_model", "compiled": false, "compiled_code": null, "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`my_second_dbt_model`", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-4 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.osha_analytics.not_null_my_second_dbt_model_id.151b76d778", "compiled": false, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.osha_analytics.unique_my_second_dbt_model_id.57a0f8c493", "compiled": false, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-26T03:38:35.293601Z", "completed_at": "2025-09-26T03:38:35.298776Z"}, {"name": "execute", "started_at": "2025-09-26T03:38:35.299208Z", "completed_at": "2025-09-26T03:38:36.405141Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.114452838897705, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "osha-analytics-project", "job_id": "6e26da8f-8900-402a-ae9c-d5632d24c2ff", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.osha_analytics.int_osha__all_years", "compiled": true, "compiled_code": "with \n\nstaging as (\n    select * from `osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2016`\n    union all\n    select * from `osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2017`\n    union all\n    select * from `osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2018`\n    union all\n    select * from `osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2019`\n    union all \n    select * from `osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2020`\n    union all\n    select * from `osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2021`\n    union all\n    select * from `osha-analytics-project`.`dbt_osha_dchung`.`stg_osha_raw__osha_2022`\n\n),\n\ntable_union as (\n\n    select\n        id,\n        company_name,\n        establishment_name,\n        ein,\n        street_address,\n        city,\n        state,\n        zip_code,\n        naics_code,\n        industry_description,\n        annual_average_employees,\n        total_hours_worked,\n        -- record_of_injuries_illnesses -- make macro,\n        case record_of_injuries_illnesses\n        when 1 then 'yes'\n        when 2 then 'no'\n        else 'EMPTY'\n    end as record_of_injuries_illnesses,\n        total_deaths,\n        total_days_away_from_work_cases as cases_away_from_work,\n        total_job_transfer_or_restriction_cases as cases_job_transfer_or_restriction,\n        total_other_cases as cases_other,\n        total_days_away_from_work_days as away_from_work_days,\n        total_job_transfer_or_restriction_days as job_transfer_or_restriction_days,\n        total_injuries,\n        total_poisonings,\n        total_respiratory_conditions,\n        total_skin_disorders,\n        total_hearing_loss,\n        total_other_illnesses,\n        establishment_id,\n        -- establishment_type, -- macro,\n        case establishment_type\n        when 1 then 'Not a government entity'\n        when 2 then 'State government entity'\n        when 3 then 'Local government entity'\n        else 'EMPTY'\n    end as establishment_type,\n        -- size, -- make macro\n        case size\n        when 1 then '< 20 employees'\n        when 2 then '20-249 employees'\n        when 21 then '20-99 employees'\n        when 22 then '100-249 employees'\n        when 3 then '250+ employees'\n        else 'EMPTY'\n    end as size,\n        year_filing_for,\n        created_timestamp,\n        change_reason,\n\n        -- calculated columns\n        -- OSHA FTE-standardized rates (per 100 full-time equivalents), 100*40*50 = 200,000 hours\n        ((total_injuries + total_poisonings + total_other_illnesses) * 200000.0 / nullif(total_hours_worked,0)) as incident_rate_fte,\n\n        (total_days_away_from_work_cases * 200000.0 / nullif(total_hours_worked,0)) as days_away_cases_rate_fte,\n\n        (total_job_transfer_or_restriction_cases * 200000.0 / nullif(total_hours_worked,0)) as job_transfer_or_restriction_rate_fte,\n     \n        (total_deaths * 200000.0 / nullif(total_hours_worked,0)) as fatality_rate_fte,\n\n        -- flag for high risk establishments\n        case when total_deaths > 1 then 'yes' else 'no' end as high_risk_establishment\n\n    from staging\n\n)\n\nselect * from table_union", "relation_name": "`osha-analytics-project`.`dbt_osha_dchung`.`int_osha__all_years`", "batch_results": null}], "elapsed_time": 5.120424270629883, "args": {"log_level_file": "debug", "target_path": "target", "log_file_max_bytes": 0, "use_fast_test_edges": false, "profiles_dir": "./", "defer": false, "resource_types": [], "printer_width": 80, "skip_nodes_if_on_run_start_fails": false, "partial_parse": true, "export_saved_queries": false, "validate_macro_args": false, "use_colors_file": true, "log_level": "debug", "show": false, "include_saved_query": false, "skip_write_msgpack_if_exist": false, "indirect_selection": "eager", "version_check": true, "exclude_resource_types": [], "profile": "user", "macro_debugging": false, "write_json": true, "require_explicit_package_overrides_for_builtin_materializations": true, "require_all_warnings_handled_by_warn_error": false, "cache_selected_only": false, "introspect": true, "require_generic_test_arguments_property": true, "static_parser": true, "favor_state": false, "populate_cache": true, "quiet": false, "invocation_command": "dbt ", "vars": {}, "show_all_deprecations": false, "upload_to_artifacts_ingest_api": false, "which": "build", "warn_error_options": {"error": [], "warn": [], "silence": []}, "send_anonymous_usage_stats": true, "empty": false, "state_modified_compare_more_unrendered_values": false, "project_dir": "/app/dbt_project/70493dcc-fe22-4131-8d97-a1b3b4b6b9c3", "partial_parse_file_diff": true, "log_format_file": "json", "require_nested_cumulative_type_params": false, "state_modified_compare_vars": false, "require_batched_execution_for_custom_microbatch_strategy": false, "strict_mode": false, "source_freshness_run_project_hooks": true, "skip_semantic_layer": false, "show_resource_report": false, "log_format": "json", "log_path": "logs", "select": [], "require_yaml_configuration_for_mf_time_spines": false, "vortex_event_forwarding_enabled": false, "exclude": [], "require_resource_names_without_spaces": true, "print": true, "use_colors": true}}